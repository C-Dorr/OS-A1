Assignment 2 README

Assignment 2 was completed by Christopher Dorr & Jordyn Marlow

Compilation:
    In dorrMarlow2/ compile using the commands:

        gcc -o prime prime.c
        gcc -o main main.c

    this will provide executables which can be run as described in the 
    following section of this readme.

Using Program:

	Prime is a standalone program that will run forever finding the 
	highest prime number. It takes two arguments:
	
	proc_num	Process number given by main. This is for output
				purposes only.
	
	priority	Priority number given by main. This is for output
				purposes only.
	
	
	Main contains the main function and the code for the scheduler.
	
	It expects a file called 'input.txt' to be in the same directory.
	'input.txt' should be formatted with rows of 4 numbers separated by 1 space.
	after the 4th number, there should be a new line. No following line should be
	present after the last row containing numbers. An example of input.txt has 
	been included in dorrMarlow.zip.

	This file contains process numbers, arrival times, bursts, and 
	priorities of multiple processes.

	Main is run with no arguments. Run with
		'./main'
	in the folder it exists in.
	
Shortcomings:
   The scheduler meets functional critera listed in the assignment. However, the
   notable shortcomings are that

       1. When switching processes, the "I just got resumed", "I just got suspended",
       	  "I just completed my task" output statements may be out of order. For
       	  example, when Process 2 is suspended and Process 1 resumes, stdout will
       	  have the "I have resumed" statement from Process 1 before the "I have been
       	  suspended" statement from Process 2.

       2. The "I just completed my task" output statement of the last process
       	  prints to stdout after the scheduler has exited.


 
